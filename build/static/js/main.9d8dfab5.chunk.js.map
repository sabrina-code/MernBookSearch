{"version":3,"sources":["api/book.js","components/SearchBar.js","components/BookItem.js","components/BookList.js","components/App.js","index.js"],"names":["axios","create","baseURL","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","value","onChange","e","setState","target","React","Component","BookItem","book","volumeInfo","title","imageLinks","alt","src","thumbnail","BookList","books","map","key","id","KEY","App","onSearchSubmit","a","get","params","q","maxResults","response","data","items","reactDOM","render","document","querySelector"],"mappings":"4QAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,wCC0BEC,G,kNAzBXC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAAAC,GACXA,EAAMC,iBAEN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAGzB,IAAD,OACL,OACI,yBAAKM,UAAU,cACX,0BAAMD,SAAUE,KAAKN,aAAcK,UAAU,cACzC,8CACA,2BACIE,KAAK,OACLC,MAAOF,KAAKR,MAAMC,KAClBU,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEZ,KAAMW,EAAEE,OAAOJ,WAElD,4BAAQD,KAAK,UAAb,gB,GAnBIM,IAAMC,YCWfC,E,uKAXD,IAAD,EACyBT,KAAKH,MAAMa,KAAKC,WAAtCC,EADH,EACGA,MAAOC,EADV,EACUA,WACf,OACI,yBAAKd,UAAU,QACXe,IAAKF,EACLG,IAAKF,EAAWG,gB,GANTT,IAAMC,WCSdS,EARE,SAAApB,GACb,IAAMqB,EAAQrB,EAAMqB,MAAMC,KAAI,SAAAT,GAC1B,OAAO,kBAAC,EAAD,CAAUU,IAAKV,EAAKW,GAAIX,KAAMA,OAEzC,OAAO,yBAAKX,UAAU,aAAamB,ICDjCI,EAAM,0CA8BGC,E,4MA3BX/B,MAAQ,CAAE0B,MAAO,I,EAMjBM,e,uCAAiB,WAAM/B,GAAN,eAAAgC,EAAA,sEACUf,EAAKgB,IAAI,WAAY,CACxCC,OAAQ,CACJC,EAAGnC,EACH2B,IAAKE,EACLO,WAAY,MALP,OACPC,EADO,OAQb,EAAKzB,SAAS,CAAEa,MAAOY,EAASC,KAAKC,QARxB,2C,wHAHbhC,KAAKwB,eAAe,a,+BAepB,OACI,6BACI,kBAAC,EAAD,CAAW1B,SAAUE,KAAKwB,iBAC1B,kBAAC,EAAD,CAAUN,MAAOlB,KAAKR,MAAM0B,a,GAtB1BX,IAAMC,WCJxByB,IAASC,OACL,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.9d8dfab5.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://www.googleapis.com/books/v1'\n});","import React from 'react';\nimport './style.css';\n\nclass SearchBar extends React.Component {\n    state = { term: '' };\n\n    onFormSubmit = event => {\n        event.preventDefault();\n        // console.log(this.state.term);\n        this.props.onSubmit(this.state.term); //passing down props.onSubmit from App\n    };\n\n    render() {\n        return (\n            <div className=\"searcharea\">\n                <form onSubmit={this.onFormSubmit} className=\"searchForm\">\n                    <label>Book search</label>\n                    <input\n                        type=\"text\"\n                        value={this.state.term}\n                        onChange={e => this.setState({ term: e.target.value })}\n                    />\n                    <button type=\"submit\" >Search</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;\n","import React from 'react';\n\nclass BookItem extends React.Component {\n    render() {\n        const { title, imageLinks } = this.props.book.volumeInfo;\n        return (\n            <img className=\"thumb\"\n                alt={title}\n                src={imageLinks.thumbnail}\n            />\n        );\n    }\n}\n\nexport default BookItem;","import React from 'react';\nimport BookItem from './BookItem';\n\nconst BookList = props => {\n    const books = props.books.map(book => {\n        return <BookItem key={book.id} book={book} />\n    });\n    return <div className=\"thumblist\">{books}</div>\n\n};\n\nexport default BookList;\n\n/* pre destructure:\nconst books = props.books.map((book) => {\n    return <img key={book.id} alt={book.volumeInfo.title} src={book.volumeInfo.imageLinks.thumbnail} />\n}); */\n/* destructure:\nconst books = props.books.map(({ id, volumeInfo }) => {\n        return <img key={id} alt={volumeInfo.title} src={volumeInfo.imageLinks.thumbnail} />\n    });\n*/","import React from 'react';\nimport book from '../api/book';\nimport SearchBar from './SearchBar';\nimport BookList from './BookList'\n\n\nconst KEY = 'AIzaSyBYlDujBqXB32sgbb43_HCVYNHm7SC5qjk';\n\nclass App extends React.Component {\n    state = { books: [] };\n\n    componentDidMount() {\n        this.onSearchSubmit('flowers');\n    }\n\n    onSearchSubmit = async term => {\n        const response = await book.get('/volumes', {\n            params: {\n                q: term,\n                key: KEY,\n                maxResults: 20\n            }\n        });\n        this.setState({ books: response.data.items });\n    }\n\n    render() {\n        return (\n            <div>\n                <SearchBar onSubmit={this.onSearchSubmit} />\n                <BookList books={this.state.books} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n//ENABLE api","import React from 'react';\nimport reactDOM from 'react-dom';\nimport App from './components/App';\n\nreactDOM.render(\n    <App />, document.querySelector('#root')\n)"],"sourceRoot":""}